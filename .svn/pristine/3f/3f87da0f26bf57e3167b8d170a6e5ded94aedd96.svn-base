package com.zszd.ai.service.impl;


import java.util.List;

import org.apache.ibatis.session.SqlSession;

import com.zszd.ai.dao.BugsDao;


import com.zszd.ai.model.Bugs;
import com.zszd.ai.service.BugsService;

import com.zszd.ai.utils.MyBatisUtil;

public class BugsServiceImpl implements BugsService {


	
	@Override
	public List<Bugs> queryAllDebugsInfo() {
		List<Bugs> BugsList=null;
		SqlSession sqlsession = null;
		try {
			sqlsession = MyBatisUtil.createSqlSession();
			BugsList = sqlsession.getMapper(BugsDao.class).queryAllDebugsInfo();
					
		} catch (Exception e) {

			e.printStackTrace();
		} finally {
			MyBatisUtil.closeSqlSession(sqlsession);
		}
		return BugsList;
	}

	@Override
	public int addBugsInfo(Bugs bugs) {
		SqlSession sqlsession = null;
		int row = 0;
		try {

			sqlsession = MyBatisUtil.createSqlSession();
			row = sqlsession.getMapper(BugsDao.class).addBugsInfo(bugs);
			sqlsession.commit();

		} catch (Exception e) {
			sqlsession.rollback();
			e.printStackTrace();
		} finally {
			MyBatisUtil.closeSqlSession(sqlsession);
		}
		return row;
		
	}

	@Override
	public Bugs getBugsById(int id) {
		Bugs bugs=null;
		SqlSession sqlsession = null;

		try {

			sqlsession = MyBatisUtil.createSqlSession();
			bugs = sqlsession.getMapper(BugsDao.class).getBugsById(id);
					

		} catch (Exception e) {

			e.printStackTrace();
		} finally {
			MyBatisUtil.closeSqlSession(sqlsession);
		}
		return bugs;
	}

	@Override
	public int updateBugsInfo(Bugs bugs) {
		SqlSession sqlsession = null;
		int row = 0;
		try {

			sqlsession = MyBatisUtil.createSqlSession();
			row = sqlsession.getMapper(BugsDao.class).updateBugsInfo(bugs);
			sqlsession.commit();

		} catch (Exception e) {
			sqlsession.rollback();
			e.printStackTrace();
		} finally {
			MyBatisUtil.closeSqlSession(sqlsession);
		}
		return row;
	}

}
